//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHorizontalDirection;

    public static Entitas.IMatcher<GameEntity> HorizontalDirection {
        get {
            if (_matcherHorizontalDirection == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HorizontalDirection);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHorizontalDirection = matcher;
            }

            return _matcherHorizontalDirection;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Movement.HorizontalDirection horizontalDirection { get { return (Code.Gameplay.Features.Movement.HorizontalDirection)GetComponent(GameComponentsLookup.HorizontalDirection); } }
    public UnityEngine.Vector2 HorizontalDirection { get { return horizontalDirection.Value; } }
    public bool hasHorizontalDirection { get { return HasComponent(GameComponentsLookup.HorizontalDirection); } }

    public GameEntity AddHorizontalDirection(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.HorizontalDirection;
        var component = (Code.Gameplay.Features.Movement.HorizontalDirection)CreateComponent(index, typeof(Code.Gameplay.Features.Movement.HorizontalDirection));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceHorizontalDirection(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.HorizontalDirection;
        var component = (Code.Gameplay.Features.Movement.HorizontalDirection)CreateComponent(index, typeof(Code.Gameplay.Features.Movement.HorizontalDirection));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveHorizontalDirection() {
        RemoveComponent(GameComponentsLookup.HorizontalDirection);
        return this;
    }
}
