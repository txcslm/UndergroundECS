//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMouseInput;

    public static Entitas.IMatcher<GameEntity> MouseInput {
        get {
            if (_matcherMouseInput == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MouseInput);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMouseInput = matcher;
            }

            return _matcherMouseInput;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Inputs.MouseInput mouseInput { get { return (Code.Gameplay.Features.Inputs.MouseInput)GetComponent(GameComponentsLookup.MouseInput); } }
    public UnityEngine.Vector2 MouseInput { get { return mouseInput.Value; } }
    public bool hasMouseInput { get { return HasComponent(GameComponentsLookup.MouseInput); } }

    public GameEntity AddMouseInput(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.MouseInput;
        var component = (Code.Gameplay.Features.Inputs.MouseInput)CreateComponent(index, typeof(Code.Gameplay.Features.Inputs.MouseInput));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceMouseInput(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.MouseInput;
        var component = (Code.Gameplay.Features.Inputs.MouseInput)CreateComponent(index, typeof(Code.Gameplay.Features.Inputs.MouseInput));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveMouseInput() {
        RemoveComponent(GameComponentsLookup.MouseInput);
        return this;
    }
}
